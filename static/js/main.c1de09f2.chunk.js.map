{"version":3,"sources":["style.module.css","index.js"],"names":["module","exports","dialog","appRoot","document","getElementById","modalRoot","ShadowBorder","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","children","Dialog","color","title","message","Modal","_this","Object","_workspace_react_practice_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_workspace_react_practice_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_workspace_react_practice_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","el","appendChild","removeChild","ReactDOM","createPortal","React","Component","SignupDialog","_this2","handleID","bind","_workspace_react_practice_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handlePW","handleShowAddress","handleHideAddress","handleSignUp","state","ID","PW","showAddress","e","setState","target","value","alert","concat","modal","onClick","type","onChange","placeholder","react_foundation__WEBPACK_IMPORTED_MODULE_11__","Colors","SECONDARY","SUCCESS","render"],"mappings":"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","file":"static/js/main.c1de09f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"style_dialog__2xGVn\"};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport './default-set.css'\nimport style from './style.module.css';\n\nimport { Button, Colors } from 'react-foundation';\n\n\nconst appRoot = document.getElementById(\"app-root\")\nconst modalRoot = document.getElementById(\"modal-root\")\n\nfunction ShadowBorder(props) {\n\treturn (\n\t\t<div className={style.dialog}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nfunction Dialog(props) {\n\treturn (\n\t\t<ShadowBorder color=\"black\">\n\t\t\t<h1 className=\"dialog-title\">\n\t\t\t\t{props.title}\n\t\t\t</h1>\n\t\t\t<p className=\"dialog-message\">\n\t\t\t\t{props.message}\n\t\t\t</p>\n\t\t\t{props.children}\n\t\t</ShadowBorder>\n\t)\n}\n\nclass Modal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.el = document.createElement(\"div\")\n\t}\n\t\n\tcomponentDidMount() {\n\t\tmodalRoot.appendChild(this.el)\n\t}\n\t\n\tcomponentWillUnmount() {\n\t\tmodalRoot.removeChild(this.el)\n\t}\n\t\n\trender() {\n\t\treturn ReactDOM.createPortal(\n\t\t\tthis.props.children,\n\t\t\tthis.el\n\t\t)\n\t}\n}\n\nclass SignupDialog extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.handleID = this.handleID.bind(this)\n\t\tthis.handlePW = this.handlePW.bind(this)\n\t\tthis.handleShowAddress = this.handleShowAddress.bind(this)\n\t\tthis.handleHideAddress = this.handleHideAddress.bind(this)\n\t\tthis.handleSignUp = this.handleSignUp.bind(this)\n\t\t\n\t\tthis.state = {ID: \"\", PW: \"\", showAddress: false}\n\t}\n\t\n\thandleID(e) {\n\t\tthis.setState({ID: e.target.value})\n\t}\n\t\n\thandlePW(e) {\n\t\tthis.setState({PW: e.target.value})\n\t}\n\t\n\thandleShowAddress(e) {\n\t\tthis.setState({showAddress: true})\n\t}\n\t\n\thandleHideAddress(e) {\n\t\tthis.setState({showAddress: false})\n\t}\n\t\n\thandleSignUp() {\n\t\talert(`Welcome aborad, ${this.state.ID}`)\n\t}\n\t\n\trender() {\n\t\tconst modal = this.state.showAddress ? (\n\t\t\t\t\t<Modal>\n\t\t\t\t\t\t<div className=\"modal\" onClick={this.handleHideAddress}>\n\t\t\t\t\t\t\t<h1>주소검색</h1>\n\t\t\t\t\t\t\t<p>asdf</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal> \n\t\t\t\t\t) : null\n\t\t\n\t\treturn (\n\t\t\t<Dialog title=\"로그인\"\n\t\t\t\t\tmessage=\"반갑습니다\">\n\t\t\t\t<input type=\"text\" value={this.state.ID} onChange={this.handleID} placeholder=\"ID\" />\n\t\t\t\t<input type=\"text\" value={this.state.PW} onChange={this.handlePW} placeholder=\"PW\" />\n\t\t\t\t<Button color={Colors.SECONDARY} onClick={this.handleShowAddress}>주소</Button>\n\t\t\t\t{modal}\n\t\t\t\t<Button color={Colors.SUCCESS} onClick={this.handleSignUp}>제출</Button>\n\t\t\t</Dialog>\n\t\t)\n\t}\n}\n\n\nReactDOM.render(<SignupDialog />, appRoot)"],"sourceRoot":""}